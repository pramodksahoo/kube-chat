# KubeChat Docker Hub Registry Configuration
# Copy this file to .env.dockerhub and configure your Docker Hub credentials

# =============================================================================
# DOCKER HUB CREDENTIALS
# =============================================================================

# Docker Hub Username (required)
DOCKERHUB_USERNAME=your-dockerhub-username

# Docker Hub Password or Access Token (required)
# SECURITY RECOMMENDATION: Use access token instead of password
# Create at: https://hub.docker.com/settings/security
DOCKERHUB_PASSWORD=your-dockerhub-password-or-token

# Docker Hub Email (optional)
DOCKERHUB_EMAIL=your-email@example.com

# =============================================================================
# DOCKER HUB REPOSITORY CONFIGURATION
# =============================================================================

# Docker Hub Repository (default: kubechat/kubechat)
DOCKERHUB_REPOSITORY=kubechat/kubechat

# Docker Registry URL (default: docker.io)
DOCKERHUB_REGISTRY=docker.io

# =============================================================================
# IMAGE TAGGING CONFIGURATION
# =============================================================================

# Base image version for tagging
IMAGE_VERSION=v1.0.0

# Environment tag suffix
ENVIRONMENT_TAG=production

# Build number (optional)
BUILD_NUMBER=1

# =============================================================================
# KUBERNETES CONFIGURATION
# =============================================================================

# Kubernetes namespace for deployment
KUBE_NAMESPACE=kubechat

# Registry secret name in Kubernetes
SECRET_NAME=dockerhub-registry-secret

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Helm values file for Docker Hub deployment
HELM_VALUES_FILE=deploy/helm/kubechat/values-dockerhub-production.yaml

# Enable automatic image push after build
AUTO_PUSH_IMAGES=true

# Enable image vulnerability scanning
ENABLE_IMAGE_SCANNING=true

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Image signing (if using Docker Content Trust)
DOCKER_CONTENT_TRUST=0

# Image scan severity threshold
IMAGE_SCAN_SEVERITY=HIGH

# =============================================================================
# CI/CD INTEGRATION
# =============================================================================

# CI/CD pipeline integration flags
CI_MODE=false
AUTOMATED_DEPLOYMENT=false

# Notification settings (optional)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...
# EMAIL_NOTIFICATIONS=admin@company.com

# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env.dockerhub:
#    cp .env.dockerhub.example .env.dockerhub

# 2. Edit .env.dockerhub with your actual credentials

# 3. Source the environment file:
#    source .env.dockerhub

# 4. Run the setup script:
#    ./scripts/setup-dockerhub.sh setup

# 5. Build and push images:
#    ./scripts/build-dev-images.sh
#    ./scripts/setup-dockerhub.sh push-images

# 6. Deploy with Docker Hub images:
#    helm install kubechat ./deploy/helm/kubechat \
#      -f deploy/helm/kubechat/values-dockerhub-production.yaml \
#      -n kubechat

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit .env.dockerhub to version control
# - Use Docker Hub access tokens instead of passwords
# - Regularly rotate your access tokens
# - Enable two-factor authentication on Docker Hub
# - Monitor Docker Hub repository access logs